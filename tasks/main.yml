---
# Need to use pip since the CentOS provided package is too old for Ansible.
- name: Ensure the pexpect Python package is installed
  local_action:
    module: pip
    name: pexpect
    state: present
  become: true

- name: Ensure global switch configuration is applied
  local_action:
    module: expect
    command: "ssh {{ ansible_ssh_common_args | default }} {{ dell_powerconnect_switch_provider.username }}@{{ dell_powerconnect_switch_provider.host }}"
    responses: >-
      {{ dell_powerconnect_auth_responses |
         combine(main_responses) |
         combine(admin_responses) |
         combine(config_responses) }}
  register: result
  failed_when: >-
    result.get('rc') != 255 or
    '% Unrecognized command' in result.stdout_lines or
    result.stdout_lines[-1] != 'console>exitConnection to ' ~ dell_powerconnect_switch_provider.host ~ ' closed.'
  vars:
    main_responses: "{{ {dell_powerconnect_main_prompt: ['enable', 'exit']} }}"
    admin_responses: "{{ {dell_powerconnect_enable_prompt: ['configure','exit']} }}"
    config_responses: "{{ {dell_powerconnect_config_prompt: dell_powerconnect_switch_config + ['exit']} }}"

- name: Ensure switch interface configuration is applied
  local_action:
    module: expect
    command: "ssh {{ ansible_ssh_common_args | default }} {{ dell_powerconnect_switch_provider.username }}@{{ dell_powerconnect_switch_provider.host }}"
    responses: >-
      {{ dell_powerconnect_auth_responses |
         combine(main_responses) |
         combine(admin_responses) |
         combine(config_responses) |
         combine(interface_responses) }}
  register: result
  failed_when: >-
    result.get('rc') != 255 or
    '% Unrecognized command' in result.stdout_lines or
    result.stdout_lines[-1] != 'console>exitConnection to ' ~ dell_powerconnect_switch_provider.host ~ ' closed.'
  with_dict: "{{ dell_powerconnect_switch_interface_config }}"
  vars:
    main_responses: "{{ {dell_powerconnect_main_prompt: ['enable','configure', 'exit']} }}"
    admin_responses: "{{ {dell_powerconnect_enable_prompt: ['configure','exit']} }}"
    config_responses: "{{ {dell_powerconnect_config_prompt: ['interface ' ~ item.key, 'exit']} }}"
    # Long config lines seem to confuse expect, so we add two exits.
    interface_responses: >-
      {{ {dell_powerconnect_interface_prompt:
          (['description ' ~ item.value.description] if 'description' in item.value else []) +
          item.value.config | default([]) +
          ['exit', 'exit']} }}
  loop_control:
    label:
      interface: "{{ item.key }}"
      description:  "{{ item.value.description | default('<none>') }}"
      config: "{{ item.value.config | default([]) }}"
